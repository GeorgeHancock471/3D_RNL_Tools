TestMode = 0;

rnlNames=newArray("X","Y","Z");


// Index
//---------------------------------------------------
// Allows you to obtain the index of a Value within an Array.

  function index(a, value) {
      for (i=0; i<a.length; i++)
          if (a[i]==value) return i;
      return -1;
  }

close("*");

imageDIR = getDirectory("Select folder containing folders with multispectral image");

fileList=getFileList(imageDIR);


labelsDIR = imageDIR +"labels.txt";




// ROI
//---------------------------------------------------
function 	roiGetList(String1){

roiList1 = newArray();
roiLocs1 = newArray();
roiFullList1 = newArray();
nROIs1 = roiManager("count");

for(j=0; j<nROIs1; j++){
	roiManager("Select", j);
	tStr = getInfo("selection.name");
	roiFullList1 = Array.concat(roiFullList1, tStr);
	if(startsWith(tStr, String1) == true){
		roiList1 = Array.concat(roiList1, tStr);
		roiLocs1= Array.concat(roiLocs1, j);
		}
	}

return roiLocs1;
}


saveTitles = newArray("File","MSPEC");






StartPosition = 0;



// LISTING CONE CATCH MODELS

	modelPath = getDirectory("plugins")+"Cone Models";

	modelList=getFileList(modelPath);

	modelNames = newArray();

	for(i=0; i<modelList.length; i++){
		if(endsWith(modelList[i], ".class")==1)
			modelNames = Array.concat(modelNames,replace(modelList[i],".class",""));
		if(endsWith(modelList[i], ".CLASS")==1)
			modelNames = Array.concat(modelNames,replace(modelList[i],".CLASS",""));
	}
	
	for(i=0; i<modelNames.length; i++)
		modelNames[i] = replace(modelNames[i], "_", " ");



// LIST VISUAL SYSTEM WEBER FRACTIONS

	vsPath = getDirectory("plugins")+"micaToolbox/weberFractions";
	vsList=getFileList(vsPath);
	vsNames = newArray();
	vsNames = Array.concat("Custom", vsNames);

	for(i=0; i<vsList.length; i++){
		if(endsWith(vsList[i], ".txt")==1)
			vsNames = Array.concat(vsNames,replace(vsList[i],".txt",""));
		if(endsWith(vsList[i], ".TXT")==1)
			vsNames = Array.concat(vsNames,replace(vsList[i],".TXT",""));
	}
		
		

// LISTING LUMINANCE OPTIONS

lumChannelArray = newArray("none", "lw", "lw mw", "x", "x y");

yesNo=newArray("No","Yes");
folderStore=newArray("One","Multiple");

Dialog.create("Variables");
Dialog.addChoice("All in one folder?", folderStore,"One"); 
Dialog.addChoice("Starting-Folder", fileList, fileList[0]); 
Dialog.addChoice("End-Folder", fileList, fileList[fileList.length-1]); 
Dialog.addChoice("cone_model",modelNames, modelNames[0]);
Dialog.addChoice("lum_channel",lumChannelArray, lumChannelArray[0]);
Dialog.addChoice("weber-system",vsNames, vsNames[0]);

Dialog.addMessage("Acuity-Settings \n ............................");
Dialog.addNumber("visual-Acuity", 13);
Dialog.addChoice("Use Acuity View?",yesNo);
Dialog.addNumber("view-distance", 500);

Dialog.addString("ROI Choices, 'allRois' if all barring scalebar", "AllRois", 40);
Dialog.addString("Pre-Script, type 'None' if no scipt", "None", 40);
Dialog.addString("Crop ROI, type 'None' if no crop, 'Current' if measure ROI", "None", 40);
Dialog.addString("DoG ROI, type 'None' if no crop, 'Current' if measure ROI", "Current", 40);
Dialog.show();

oneFolder = Dialog.getChoice();

startFolder = Dialog.getChoice();
		startIndex = index(fileList,startFolder);
		StartPosition=startIndex;
		
endFolder = Dialog.getChoice();
		endIndex = index(fileList,endFolder);
		EndPosition=endIndex;
		
coneMethod = Dialog.getChoice();
lumMethod  = Dialog.getChoice(); 	
webMethod  = Dialog.getChoice(); 





acuity = Dialog.getNumber();
useView = Dialog.getChoice();
distanceView = Dialog.getNumber();




ROIListStr =  Dialog.getString(); 
ROIListStr = replace(ROIListStr,", ",",");
ROIList =  split(ROIListStr,",");

Prescript = Dialog.getString();
CropROI = Dialog.getString();
DoGROI = Dialog.getString();


AllGate=0;
if(ROIList[0]=="AllRois") AllGate=1;


Dialog.create("DoG");
Dialog.addMessage("N octaves determines the number of scales, largest scale = ROI Scale");
Dialog.addMessage("Offset is whether the scale should go above or beloe, -2 equals 2x and 4x above");
Dialog.addNumber("N_Octaves", 6, 1, 10,"");
Dialog.addNumber("Offset Octaves", -2, 1, 10,"");
Dialog.addString("ROI_Scale", "Clutch", 40);
Dialog.show();


nOctaves =  Dialog.getNumber(); 
offset =  Dialog.getNumber(); 
wlROI = Dialog.getString();


				
coneString="model=["+coneMethod+"] desaturate desaturation=0.010 remove replace=0.001";

rois = String.join(ROIList,".");

fileSaveTitle = "Batch_RNL_ROIScale_Energy_"+coneMethod+"_"+rois+".txt";
fileSaveDIR = imageDIR + fileSaveTitle;

printCheck=0;


if(oneFolder=="One"){
StartPosition=0;
EndPosition=0;
}


for(j=StartPosition; j<=EndPosition; j++){


//setBatchMode(true);
close("*");

setBatchMode(false);


if(oneFolder=="Multiple") fileList2=getFileList( imageDIR + fileList[j] );
if(oneFolder=="One") fileList2=getFileList( imageDIR );



mspecList=newArray();

for(i=0; i<fileList2.length; i++){ // list only mspec files
	if(endsWith(fileList2[i], ".mspec")==1) mspecList = Array.concat(mspecList, fileList2[i]);
}

for(nm=0; nm<mspecList.length; nm++){

if(oneFolder=="Multiple")imageString = "select=[" +  imageDIR + fileList[j] + mspecList[nm] + "] image=[Linear Normalised Reflectance Stack]";
if(oneFolder=="Multiple")roiString = imageDIR + fileList[j] + replace(mspecList[nm],".mspec",".zip");
if(oneFolder=="One")imageString = "select=[" +  imageDIR  + mspecList[nm] + "] image=[Linear Normalised Reflectance Stack]";
if(oneFolder=="One")roiString = imageDIR + replace(mspecList[nm],".mspec",".zip");

print(imageString);

// Prep Images
//===========
setPasteMode("Copy");
run(" Load Multispectral Image", imageString);
rename("MSPEC_BASE");


if(Prescript != "None"){
	run(Prescript);
}


// Make Sure all ROIs are in Image
//---------------------------------
nROI = roiManager("count");
run("Select All");
roiManager("Add");

for(i=0;i<nROI;i++){
roiManager("select", 0);
selName = getInfo("selection.name");
roiManager("select", newArray(0,nROI-i));
roiManager("AND");
roiManager("Add");
roiManager("select", roiManager("count")-1);
roiManager("rename",selName);
roiManager("select",0);
roiManager("delete");
}

roiManager("select",0);
roiManager("delete");

// Get Scalebar Old
//-----------------------------------------------
nSelections = roiManager("count");
	scaleFlag = 0;
	for(i=0; i<nSelections; i++){
		roiManager("select", i);
		selName = getInfo("selection.name");
		if( startsWith(selName, "Scale") == 1){ // found the scale bar - extract the info
			scaleLoc = i;
			scaleFlag = 1;
			scaleInfo = split(selName, ":");
			pixLength = scaleInfo[1];
			scaleMm = scaleInfo[2];
		}	
	}//i


scaleValOld = parseFloat(pixLength)/parseFloat(scaleMm);






run("Select None");

run("Convert to Cone Catch", coneString);

if(lumMethod != "none"){
run("Create Luminance Channel", lumMethod);
wait(10);
}




if(useView=="Yes"){
AcuityString = "acuity=[Cycles per degree] acuity_0="+acuity+" method=[Viewing distance] distance="+distanceView+" rescale=5";
run("Acuity View", AcuityString);
}






// Get Scalebar New
//-----------------------------------------------


roiManager("select", scaleLoc);
getStatistics(area);

scaleVal = parseFloat(area)/parseFloat(scaleMm);



// Rescale to ROI
//-----------------
run("Select None");

for(i=0; i<nSelections; i++){
		roiManager("select", i);
		selName = getInfo("selection.name");
		if( endsWith(selName, wlROI ) == 1){ 
		i = nSelections;
		}	
	}//i

getStatistics(area);
wl =  Math.sqrt(area);


minS = Math.pow(2,(nOctaves+offset));
rescale=minS/(wl);


w = getWidth();
h = getHeight();

w= w*(rescale);
h=h*(rescale);
run("Select None");
run("Size...", "width=&w height=&h constrain average interpolation=Bilinear");

	for(i=0; i<nSelections; i++){
		roiManager("select", i);
		run("Scale... ", "x=&rescale y=&rescale");	
		roiManager("Update");
	}//i







setBatchMode("show");


rename("ConeCatch");

tStr = "visual=["+webMethod+"]";
run("Cone Catch to RNL Chromaticity",tStr );

rename("RNL");

selectImage("ConeCatch");
setSlice(nSlices);
run("Select None");
run("Duplicate...", "title=LUM");


selectImage("RNL");

nSelections= roiManager("count");



if(CropROI != "None"){
for(i=0; i<nSelections; i++){
		roiManager("select", i);
		selName = getInfo("selection.name");
		if( startsWith(selName, CropROI ) == 1){ // found the scale bar - extract the info
		Roi.getBounds(x1, y1, width1, height1);
		run("Crop");
		run("Select None");
		selectImage("LUM");
		roiManager("select", i);
		Roi.move(x1,y1);
		run("Crop");
		roiManager("select", i);
		Roi.move(x1,y1);
		roiManager("update");
		run("Select None");
		i = nSelections;
		}	
	}//i

for(i=0; i<nSelections; i++){
		roiManager("select", i);
		Roi.getBounds(x, y, width, height);
		Roi.move(x-x1,y-y1);
		roiManager("update");
	}//i
	
}



DogROIList = roiGetList(DoGROI);



//List All Rois
//--------------------------------------------------------------

		if(AllGate==0){
		ROIindexes=newArray();

		for(i=0;i<ROIList.length;i++){
		temp = roiGetList(ROIList[i]);
		ROIindexes=Array.concat(ROIindexes,temp);
		}
		
		} else {
		
		ROIindexes=newArray();

		for(i=0;i<roiManager("count");i++){
		roiManager("select",i);
		tStr = getInfo("selection.name");
		if(!startsWith(tStr,"Scale")) ROIindexes=Array.concat(ROIindexes,i);
		}
		
		
		}


if(ROIindexes.length>0){
run("Select None");




if(DoGROI != "Current"){

DoGArray= newArray();

selectImage("LUM");
oldTitle = getTitle();
sliceTitle = getInfo("slice.label");
sliceTitle = replace(sliceTitle," ","");
if(DoGROI!="None") roiManager("select", DogROIList);
run("DoG ROI bandpass smooth", "sigma1=1 sigma2=1.6 number_of_octaves="+nOctaves+" label=BG-1");
Name = oldTitle+"_"+sliceTitle+"_DoG";
rename(Name);
DoGArray= Array.concat(DoGArray,Name);


selectImage("RNL");
numSlice = nSlices;
for(i=0;i<numSlice;i++){
setSlice(i+1);
oldTitle = getTitle();
sliceTitle = getInfo("slice.label");
sliceTitle = replace(sliceTitle," ","");
if(DoGROI!="None") roiManager("select", DogROIList);
run("DoG ROI bandpass smooth", "sigma1=1 sigma2=1.6 number_of_octaves="+nOctaves+" label=BG-1");
Name = oldTitle+"_"+sliceTitle+"_DoG";
rename(Name);
DoGArray= Array.concat(DoGArray,Name);
selectImage("RNL");
}

}// Not Current




if(printCheck==0) saveTitles=Array.concat(saveTitles,"ROI");


Titles= newArray();
for(X=0;X<ROIindexes.length;X++){
roiInd = ROIindexes[X];
roiManager("select", roiInd);
roi = getInfo("selection.name");
MeasuresArray=newArray(roi); // ResetMeasures

	selectImage("LUM");
	roiManager("select", roiInd);
	slice=getInfo("slice.label");
	measureTitleMean = "LUM_"+slice+"_Mean";
	measureTitleDev = " LUM_"+slice+"_Dev";
	

	if(printCheck==0) saveTitles=Array.concat(saveTitles,measureTitleMean,measureTitleDev);	
	getStatistics(area,mean,min,max,dev);
	MeasuresArray=Array.concat(MeasuresArray,d2s(mean, 20),d2s(dev, 20));

	selectImage("RNL");
	roiManager("select", roiInd);
	for(i=0;i<nSlices;i++){
	setSlice(i+1);
	
	if(i<nSlices-1){channel=rnlNames[i];} else { channel="Saturation"; }
	
	slice=getInfo("slice.label");
	//
	measureTitleMean = "RNL_"+slice+"_Mean";
	measureTitleDev = " RNL_"+slice+"_Dev";
	
	if(printCheck==0) saveTitles=Array.concat(saveTitles,measureTitleMean,measureTitleDev);	
	getStatistics(area,mean,min,max,dev);
	MeasuresArray=Array.concat(MeasuresArray,d2s(mean, 20),d2s(dev, 20));
	}


if(DoGROI != "Current"){

		for(Y=0;Y<DoGArray.length;Y++){

		selectImage(DoGArray[Y]);
		roiManager("select", roiInd);

		for(i=0;i<nSlices;i++){
		setSlice(i+1);

		slice=getInfo("slice.label");
		
		measureTitleMean = DoGArray[Y]+"_"+slice+"_Mean";
		measureTitleDev = DoGArray[Y]+"_"+slice+"_Dev";
		

		if(printCheck==0) saveTitles=Array.concat(saveTitles,measureTitleMean,measureTitleDev);

		getStatistics(area,mean,min,max,dev);
		MeasuresArray=Array.concat(MeasuresArray,d2s(mean, 20),d2s(dev, 20));

		} // (i)


		} // (Y)

} //Not Current


if(DoGROI == "Current"){


		//Luminance
		selectImage("LUM");
		
		oldTitle = getTitle();
		sliceTitle = getInfo("slice.label");
		sliceTitle = replace(sliceTitle," ","");
		roiManager("select", roiInd);
		run("DoG ROI bandpass smooth", "sigma1=1 sigma2=1.6 number_of_octaves="+nOctaves+" label=BG-1");
		Name = oldTitle+"_"+sliceTitle+"_DoG";
		rename(Name);
		selectImage(Name);
		roiManager("select", roiInd);
	
		Roi.move(0,0);
		for(i=0;i<nSlices;i++){
		setSlice(i+1);
		slice=getInfo("slice.label");
		
		measureTitleMean = Name+"_"+slice+"_Mean";
		measureTitleDev = Name+"_"+slice+"_Dev";
		
		
		if(printCheck==0) saveTitles=Array.concat(saveTitles,measureTitleMean,measureTitleDev);
		getStatistics(area,mean,min,max,dev);
		MeasuresArray=Array.concat(MeasuresArray,d2s(mean, 20),d2s(dev, 20));
		} // (i)

		close();

		//RNL
		selectImage("RNL");
		
		
		selectImage("RNL");
		numSlice = nSlices;
		
		
		for(r=0;r<numSlice;r++){
		selectImage("RNL");
		setSlice(r+1);
		oldTitle = getTitle();
		sliceTitle = getInfo("slice.label");
		sliceTitle = replace(sliceTitle," ","");
		if(DoGROI!="None") roiManager("select", DogROIList);
		run("DoG ROI bandpass smooth", "sigma1=1 sigma2=1.6 number_of_octaves="+nOctaves+" label=BG-1");
		Name = oldTitle+"_"+sliceTitle+"_DoG";
		rename(Name);

		selectImage(Name);
		roiManager("select", roiInd);
		Roi.move(0,0);
		for(i=0;i<nSlices;i++){
		setSlice(i+1);
		slice=getInfo("slice.label");
		
		measureTitleMean = Name+"_"+slice+"_Mean";
		measureTitleDev = Name+"_"+slice+"_Dev";

		
		if(printCheck==0) saveTitles=Array.concat(saveTitles,measureTitleMean,measureTitleDev);
		getStatistics(area,mean,min,max,dev);
		MeasuresArray=Array.concat(MeasuresArray,d2s(mean, 20),d2s(dev, 20));
		} // (i)


		close();

		}



}// Current


if(printCheck==0){
saveTitleSTR = String.join(saveTitles,"\t");
File.append(saveTitleSTR, fileSaveDIR);
printCheck=1;
}


if(TestMode==0){

MeasuresArray=Array.concat(fileList[j],mspecList[nm],MeasuresArray);
measureSTR = String.join(MeasuresArray,"\t");
File.append(measureSTR, fileSaveDIR);

//Array.show(saveTitles,MeasuresArray);


}

if(TestMode==1){setBatchMode("exit and display"); exit };



} // (X)
} /// (ROI present)


close("*");
} // (MSPEC Exist)

}//( File loop);

if(isOpen("Log"))close("Log");
print("Done");